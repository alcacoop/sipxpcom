#include "nsISupports.idl"
#include "nsIExtensionManager.idl"
#include "nsIFile.idl"
#include "nsIRunnable.idl"
#include "nsIArray.idl"


[scriptable, function, uuid(3869ed55-e06a-4ac1-84ea-4c3a4b696924)]
interface nsSipStateObserver : nsISupports {
  void onStatusChange(in string status);
};




[scriptable, uuid(248eaceb-8910-49a5-a775-f06b62eaa2cd)]
interface nsICallLog : nsISupports
{
  attribute short direction;
  attribute short status;
  attribute long duration;
  attribute ACString from;
  attribute ACString to;
  attribute ACString date;
};



[scriptable, uuid(fe4d239b-8766-4386-999d-bcd68903eb71)]
interface nsIList : nsISupports
{
  nsICallLog item(in unsigned long index);
  [noscript] void add(in nsICallLog cl);
  readonly attribute unsigned long length;
};


[scriptable, uuid(3b88b334-2836-4ed5-9c5c-4936dc9b73c5)]
interface nsIProxyConfig : nsISupports
{
  attribute ACString sip_identity;
  attribute ACString sip_proxy;
  attribute ACString sip_route;
  attribute ACString userid;
  attribute ACString password;
  attribute long duration;
};



[scriptable, uuid(c5bf5079-8bc3-4fc5-881f-f3bd85a63c61)]
interface nsISIP : nsISupports
{
  void init(in long port);
  void destroy();

  void setSipPort(in long _port);
  void setRTPAudioPort(in long _port);
  void setNOFirewall();
  void setNATFirewall(in string fw_addr);
  void setSTUNFirewall(in string stun_addr);

  void setPrimaryIdentity(in string username);
  void getPrimaryIdentity([retval] out ACString username);
  void changeIdentity(in long account, [retval] out long used);
  void getCurrentIdentity([retval] out ACString identity);

  void setProxyConfig(in nsIProxyConfig cfg);
  void getProxyConfig([retval] out nsIProxyConfig cfg);
  void registerToProxy();
  void unregisterToProxy();
  void setPresenceInfo(in long presence_status);

  void call(in string URI);
  void hangup();
  void accept();
  void sendDtmf(in char tone);
  boolean isValidSipURI(in string uri);

  void setRingTone(in string file);

  void getCallLogs([retval] out nsIList retv);
  void clearCallLogs();

  void addObserver(in nsSipStateObserver cbk);
  void removeObserver(in nsSipStateObserver cbk);
  void clearObservers();
};

